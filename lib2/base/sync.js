// Generated by CoffeeScript 1.4.0
(function() {
  var EventEmitter, ServerModel,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require("events").EventEmitter;

  ServerModel = require("./model");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    /*
        Function: Constructor
        Parameters:
    */


    function _Class(target) {
      this.target = target;
      this.ec2 = target.region.ec2;
      this.SYNC_TIMEOUT = 1000 * 6;
    }

    /*
        Function: start
          Starts the synchronization process
    
        Parameters:
    */


    _Class.prototype.start = function(callback) {
      var _this = this;
      if (!callback) {
        callback = function() {};
      }
      this.on("update", callback);
      setInterval((function() {
        return _this.update();
      }), this.SYNC_TIMEOUT);
      return this.update();
    };

    /*
        Function: updates 
    
        Updates the collection with the newest server info from EC2.
        Note - this is really only important for inserting NEW ec2 instances, since
        each server does a fetch for new information periodically
    
        Parameters:
    */


    _Class.prototype.update = function(callback) {};

    return _Class;

  })(EventEmitter);

}).call(this);
