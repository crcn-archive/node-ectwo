// Generated by CoffeeScript 1.4.0
(function() {
  var BaseSync, updateCollection,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseSync = require("../../base/sync");

  updateCollection = require("../../utils/updateCollection");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    /*
        Function: updates 
    
        Updates the collection with the newest server info from EC2.
        Note - this is really only important for inserting NEW ec2 instances, since
        each server does a fetch for new information periodically
    
        Parameters:
    */


    _Class.prototype.update2 = function(callback) {
      var _this = this;
      if (!callback) {
        callback = (function() {});
      }
      return this.ec2.call("DescribeImages", {
        "Owner.1": "self"
      }, function(err, result) {
        var images;
        if (!result.imagesSet.item) {
          return callback();
        }
        images = !(result.imagesSet.item instanceof Array) ? [result.imagesSet.item] : result.imagesSet.item;
        return updateCollection(_this.target.collection, images, "imageId", callback);
      });
    };

    return _Class;

  })(BaseSync);

}).call(this);
