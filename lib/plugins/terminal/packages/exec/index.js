// Generated by CoffeeScript 1.6.2
(function() {
  var childProcess, exec, fs, sprintf, type;

  childProcess = require("child_process");

  exec = childProcess.exec;

  sprintf = require("sprintf").sprintf;

  type = require("type-component");

  fs = require("fs");

  exports.require = ["ectwo", "utils"];

  exports.load = function(ectwo, utils) {
    return ectwo.fastener.options().instance.exec = {
      type: "ssh",
      onCall: function() {},
      call: function(options, next) {
        var cmd, orgFile, proc, tmpFile;

        if (arguments.length === 1) {
          next = options;
          options = {};
        }
        if (type(options) === "string") {
          options = {
            cmd: options
          };
        }
        if (!options.user) {
          options.user = "ubuntu";
        }
        if (!options.key) {
          options.key = utils.defaultKeyPath(this.get("region"), this.get("keyName"));
        }
        options.cmd = options.cmd.replace("~", process.env.HOME).replace(/^\./, process.cwd());
        tmpFile = "/tmp/ectwo-script.sh";
        if (fs.existsSync(options.cmd)) {
          orgFile = options.cmd;
        } else {
          orgFile = "/tmp/ectwo-script.sh";
          fs.writeFileSync(tmpFile, options.cmd, {
            mode: 755
          });
        }
        cmd = sprintf("ssh -t -t -i %s %s@%s 'sh /tmp/ectwo-script.sh'", options.key, options.user, this.get("dnsName"));
        cmd = sprintf("scp -i %s %s %s@%s:%s; %s", options.key, orgFile, options.user, this.get("dnsName"), tmpFile, cmd);
        console.log(cmd);
        proc = exec(cmd, function() {
          return next();
        });
        delete proc.stdout._events.data;
        delete proc.stderr._events.data;
        proc.stdout.pipe(process.stdout);
        return proc.stderr.pipe(process.stderr);
      }
    };
  };

}).call(this);
