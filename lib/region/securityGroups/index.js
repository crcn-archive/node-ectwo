// Generated by CoffeeScript 1.6.2
(function() {
  var SecurityGroup, SecurityGroups, outcome, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SecurityGroup = require("./securityGroup");

  outcome = require("outcome");

  toarray = require("toarray");

  SecurityGroups = (function(_super) {
    __extends(SecurityGroups, _super);

    /*
    */


    function SecurityGroups(region) {
      SecurityGroups.__super__.constructor.call(this, {
        modelClass: SecurityGroup,
        region: region
      });
    }

    /*
    */


    SecurityGroups.prototype.create = function(optionsOrName, next) {
      var options,
        _this = this;

      if (typeof optionsOrName === "string") {
        options = {
          name: optionsOrName
        };
      }
      if (!options.description) {
        options.description = "Security group";
      }
      return this.region.api.call("CreateSecurityGroup", {
        GroupName: options.name,
        GroupDescription: options.description
      }, outcome.e(next).s(function(result) {
        return _this.waitForOne({
          name: options.name
        }, next);
      }));
    };

    /*
    */


    SecurityGroups.prototype._load2 = function(options, next) {
      var search;

      search = {};
      if (options._id) {
        search["GroupId.1"] = options._id;
      }
      return this.region.api.call("DescribeSecurityGroups", search, outcome.e(next).s(function(result) {
        var items;

        items = toarray(result.securityGroupInfo.item).map(function(sg) {
          return {
            _id: sg.groupId,
            ownerId: sg.ownerId,
            name: sg.groupName,
            description: sg.groupDescription,
            permissions: sg.ipPermissions
          };
        });
        return next(null, items);
      }));
    };

    return SecurityGroups;

  })(require("../../base/collection"));

  module.exports = SecurityGroups;

}).call(this);
