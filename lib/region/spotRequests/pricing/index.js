// Generated by CoffeeScript 1.4.0
(function() {
  var BaseCollection, Pricing, getOS, outcome, pricing, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseCollection = require("../../base/collection");

  Pricing = require("./pricing");

  outcome = require("outcome");

  toarray = require("toarray");

  pricing = require("./pricing");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    /*
    */


    function _Class(region) {
      _Class.__super__.constructor.call(this, region, {
        modelClass: Pricing,
        timeout: 1000 * 60
      });
    }

    /*
    */


    _Class.prototype._load = function(options, onLoad) {
      return this.ec2.call("DescribeSpotPriceHistory", {}, outcome.e(onLoad).s(function(result) {
        pricing = toarray(result.spotPriceHistorySet.item).map(function(price) {
          var os;
          os = getOS(price.productDescription);
          return {
            _id: price.instanceType + "-" + os,
            type: price.instanceType,
            platform: os,
            timestamp: new Date(price.timestamp),
            price: Number(price.spotPrice),
            description: price.productDescription
          };
        });
        return onLoad(null, pricing);
      }));
    };

    return _Class;

  })(BaseCollection);

  getOS = function(desc) {
    var oss;
    desc = desc.toLowerCase();
    oss = {
      "linux/unix": "linux",
      "linux/unix (amazon vpc)": "linux-vpc",
      "windows": "windows",
      "windows (amazon vpc)": "windows-vpc",
      "suse linux": "suse-linux",
      "suse linux (amazon vpc)": "suse-linux-vpc"
    };
    return oss[desc] || desc;
  };

}).call(this);
