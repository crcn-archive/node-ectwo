// Generated by CoffeeScript 1.6.2
(function() {
  var Addresses, BaseModel, Images, Instances, KeyPairs, Region, SecurityGroups, Snapshots, SpotRequests, Volumes, Zones, aws, outcome, stepc,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseModel = require("../base/model");

  aws = require("aws-lib");

  Instances = require("./instances");

  Images = require("./images");

  KeyPairs = require("./keyPairs");

  SecurityGroups = require("./securityGroups");

  Addresses = require("./addresses");

  SpotRequests = require("./spotRequests");

  Snapshots = require("./snapshots");

  Volumes = require("./volumes");

  Zones = require("./zones");

  stepc = require("stepc");

  outcome = require("outcome");

  Region = (function(_super) {
    __extends(Region, _super);

    /*
    */


    function Region(data, collection) {
      var ops, options;

      Region.__super__.constructor.call(this, data, collection);
      options = collection.ectwoOptions;
      ops = {
        host: "ec2." + (this.get('_id')) + ".amazonaws.com",
        key: options.key,
        secret: options.secret,
        version: "2013-08-15"
      };
      this.api = aws.createEC2Client(ops.key, ops.secret, {
        host: ops.host,
        version: ops.version
      });
      this.instances = new Instances(this);
      this.allImages = new Images(this);
      this.images = new Images(this, {
        "Owner.1": "self"
      });
      this.keyPairs = new KeyPairs(this);
      this.securityGroups = new SecurityGroups(this);
      this.addresses = new Addresses(this);
      this.snapshots = new Snapshots(this);
      this.volumes = new Volumes(this);
      this.zones = new Zones(this);
    }

    /*
    */


    Region.prototype.toString = function() {
      return this.get("_id");
    };

    return Region;

  })(BaseModel);

  module.exports = Region;

}).call(this);
