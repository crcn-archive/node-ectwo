// Generated by CoffeeScript 1.6.2
(function() {
  var Zones, bindable, outcome, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  outcome = require("outcome");

  toarray = require("toarray");

  Zones = (function(_super) {
    __extends(Zones, _super);

    /*
    */


    function Zones(region) {
      Zones.__super__.constructor.call(this, {
        modelClass: bindable.Object,
        region: region
      });
    }

    /*
    */


    Zones.prototype._load2 = function(options, next) {
      var _this = this;

      return this.api.call("DescribeAvailabilityZones", {}, outcome.e(next).s(function(result) {
        return next(null, toarray(result.availabilityZoneInfo.item).map(function(item) {
          return {
            _id: item.zoneName,
            name: item.zoneName,
            state: item.zoneState,
            region: item.regionName
          };
        }));
      }));
    };

    return Zones;

  })(require("../../base/collection"));

  module.exports = Zones;

}).call(this);
