// Generated by CoffeeScript 1.6.2
(function() {
  var Address, Addresses, outcome, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  outcome = require("outcome");

  Address = require("./address");

  toarray = require("toarray");

  Addresses = (function(_super) {
    __extends(Addresses, _super);

    /*
    */


    function Addresses(region) {
      Addresses.__super__.constructor.call(this, {
        modelClass: Address,
        region: region
      });
    }

    /*
    */


    Addresses.prototype.create = function(next) {
      var _this = this;

      return this.region.api.call("AllocateAddress", {}, outcome.e(next).s(function(result) {
        return _this.waitForOne({
          publicIp: result.publicIp
        }, next);
      }));
    };

    /*
    */


    Addresses.prototype._load2 = function(options, next) {
      var search;

      search = {};
      if (options._id) {
        search["PublicIp.1"] = options._id;
      }
      return this.region.api.call("DescribeAddresses", search, outcome.e(next).s(function(result) {
        var addresses;

        addresses = toarray(result.addressesSet.item).map((function(item) {
          var instanceId;

          if (typeof item.instanceId === "object") {
            instanceId = void 0;
          } else {
            instanceId = item.instanceId;
          }
          return {
            _id: item.publicIp,
            publicIp: item.publicIp,
            domain: item.domain,
            instanceId: instanceId
          };
        }));
        return next(null, addresses);
      }));
    };

    return Addresses;

  })(require("../../base/collection"));

  module.exports = Addresses;

}).call(this);
