// Generated by CoffeeScript 1.6.2
(function() {
  var Address, outcome, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  outcome = require("outcome");

  Address = (function(_super) {
    __extends(Address, _super);

    function Address() {
      _ref = Address.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    Address.prototype.detach = function(next) {
      var _this = this;

      return this.api.call("DisassociateAddress", {
        PublicIp: this.get("publicIp")
      }, outcome.e(next).s(function(result) {
        return _this.reload(next);
      }));
    };

    /*
    */


    Address.prototype.attach = function(instanceOrInstanceId, next) {
      var instanceId,
        _this = this;

      instanceId = typeof instanceOrInstanceId === "object" ? instanceOrInstanceId.get("_id") : instanceOrInstanceId;
      return this.api.call("AssociateAddress", {
        PublicIp: this.get("publicIp"),
        InstanceId: instanceId
      }, function() {
        return _this.region.instances.reload(function() {
          return _this.reload(next);
        });
      });
    };

    /*
    */


    Address.prototype._destroy = function(next) {
      return this.api.call("ReleaseAddress", {
        PublicIp: this.get("publicIp")
      }, next);
    };

    return Address;

  })(require("../../base/regionModel"));

  module.exports = Address;

}).call(this);
