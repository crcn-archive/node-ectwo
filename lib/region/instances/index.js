// Generated by CoffeeScript 1.4.0
(function() {
  var BaseCollection, InstanceModel, comerr, findTags, flatten, gumbo, outcome, sift, stepc, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gumbo = require("gumbo");

  InstanceModel = require("./instance");

  comerr = require("comerr");

  _ = require("underscore");

  flatten = require("flatten");

  outcome = require("outcome");

  stepc = require("stepc");

  findTags = require("../../utils/findTags");

  sift = require("sift");

  BaseCollection = require("../base/collection");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    /*
    */


    function _Class(region) {
      _Class.__super__.constructor.call(this, region, {
        uniqueKey: "instanceId",
        modelClass: InstanceModel
      });
    }

    /*
    */


    _Class.prototype._load = function(onLoad) {
      var itags, o, self;
      self = this;
      o = outcome.e(onLoad);
      itags = null;
      return self.ec2.call("DescribeInstances", {}, o.s(function(result) {
        var instances, serversById;
        serversById = {};
        if (!result.reservationSet.item) {
          return onLoad(null, []);
        }
        instances = !(result.reservationSet.item instanceof Array) ? [result.reservationSet.item] : result.reservationSet.item;
        instances = instances.map(function(instance) {
          return instance.instancesSet.item;
        });
        instances = flatten(instances);
        instances = instances.filter(function(instance) {
          return instance.instanceState.name !== "terminated";
        });
        return onLoad(null, instances);
      }));
    };

    return _Class;

  })(BaseCollection);

}).call(this);
