// Generated by CoffeeScript 1.4.0
(function() {
  var allRegions, createImage, gumbo, outcome, stepc,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gumbo = require("gumbo");

  stepc = require("stepc");

  outcome = require("outcome");

  allRegions = require("../../utils/regions");

  createImage = require("../../utils/createImage");

  module.exports = (function(_super) {

    __extends(_Class, _super);

    /*
        Function: 
    
        Parameters:
    */


    function _Class(collection, region, item) {
      this.region = region;
      _Class.__super__.constructor.call(this, collection, item);
    }

    /*
        Function: createServer
      
        creates a new server from the AMI
    
        Parameters:
    */


    _Class.prototype.createInstance = function(options, callback) {
      ectwo_log.log("%s: create server", this.region.name);
      options.imageId = this.get("imageId");
      return createImage(this.region, options, callback);
    };

    /*
    */


    _Class.prototype.migrate = function(toRegions, callback) {};

    /*
        Function: removes the AMI 
    
        Parameters:
    */


    _Class.prototype.deRegister = function(callback) {
      ectwo_log.log("%s: degister ami %s", this.region.name, this.get("imageId"));
      return this._ec2.call("DeregisterImage", {
        "ImageId": this.get("imageId")
      }, callback);
    };

    return _Class;

  })(gumbo.BaseModel);

}).call(this);
