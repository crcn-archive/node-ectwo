// Generated by CoffeeScript 1.6.2
(function() {
  var Image, Images, convertTags, outcome, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  outcome = require("outcome");

  toarray = require("toarray");

  Image = require("./image");

  convertTags = require("../../utils/convertTags");

  Images = (function(_super) {
    __extends(Images, _super);

    /*
    */


    function Images(region) {
      this.region = region;
      Images.__super__.constructor.call(this, {
        modelClass: Image
      });
    }

    /*
    */


    Images.prototype._load2 = function(options, next) {
      var search,
        _this = this;

      search = {
        "Owner.1": "self"
      };
      if (options._id) {
        search = {
          "ImageId.1": options._id
        };
      }
      return this.region.api.call("DescribeImages", search, outcome.e(next).s(function(result) {
        var images;

        images = toarray(result.imagesSet.item).map(function(image) {
          return {
            _id: image.imageId,
            state: image.imageState,
            ownerId: image.imageOwnerId,
            isPublic: image.isPublic,
            region: _this.region.get("_id"),
            name: image.name,
            type: image.imageType,
            kernelId: image.kernelId,
            platform: (image.platform || "linux").toLowerCase(),
            architecture: image.architecture,
            description: image.description,
            virtualizationType: image.virtualizationType,
            tags: convertTags(image)
          };
        });
        return next(null, images);
      }));
    };

    return Images;

  })(require("../../base/collection"));

  module.exports = Images;

}).call(this);
