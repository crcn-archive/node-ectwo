{
  "name": "hurryup",
  "version": "0.0.0",
  "description": "hurryUp.js ==========",
  "main": "./lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/crcn/hurryUp.js.git"
  },
  "author": "",
  "license": "BSD",
  "readmeFilename": "README.md",
  "dependencies": {
    "comerr": "0.0.x"
  },
  "readme": "hurryUp.js\n==========\n\ntimeout library for callbacks\n\n\n## API\n\n### hurryUp(timedCallback, next, timeout=10000, ...args)\n\n```javascript\nhurryUp(function(next) {\n  \n  //this will cause an error\n  setTimeout(next, 2000);\n}, 1000).call(null, function(err, result) {\n  console.error(\"timeout has occurred!\")\n})\n```\n\nHere's an easier way to wrap around a method:\n\n```javascript\nhurryUp(emitter.once, 1000).call(emitter, \"connected\", function(err, result) {\n  \n});\n```\n",
  "_id": "hurryup@0.0.0",
  "_from": "hurryUp"
}
